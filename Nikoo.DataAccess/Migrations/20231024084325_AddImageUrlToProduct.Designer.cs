// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nikoo.DataAccess.Data;

#nullable disable

namespace Nikoo.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231024084325_AddImageUrlToProduct")]
    partial class AddImageUrlToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nikoo.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("Nikoo.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsImportant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuggested")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SellCount")
                        .HasColumnType("int");

                    b.Property<int>("StoreCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Product1 Description",
                            ImageUrl = "",
                            IsActive = true,
                            IsImportant = false,
                            IsSuggested = false,
                            Price = 1000,
                            SellCount = 0,
                            StoreCapacity = 100,
                            Title = "Product1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Product2 Description",
                            ImageUrl = "",
                            IsActive = true,
                            IsImportant = false,
                            IsSuggested = false,
                            Price = 2000,
                            SellCount = 0,
                            StoreCapacity = 200,
                            Title = "Product2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Product3 Description",
                            ImageUrl = "",
                            IsActive = true,
                            IsImportant = false,
                            IsSuggested = false,
                            Price = 3000,
                            SellCount = 0,
                            StoreCapacity = 300,
                            Title = "Product3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Product4 Description",
                            ImageUrl = "",
                            IsActive = true,
                            IsImportant = false,
                            IsSuggested = false,
                            Price = 4000,
                            SellCount = 0,
                            StoreCapacity = 400,
                            Title = "Product4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Product3 Description",
                            ImageUrl = "",
                            IsActive = true,
                            IsImportant = false,
                            IsSuggested = false,
                            Price = 3000,
                            SellCount = 0,
                            StoreCapacity = 300,
                            Title = "Product3"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Product6 Description",
                            ImageUrl = "",
                            IsActive = true,
                            IsImportant = false,
                            IsSuggested = false,
                            Price = 6000,
                            SellCount = 0,
                            StoreCapacity = 600,
                            Title = "Product6"
                        });
                });

            modelBuilder.Entity("Nikoo.Models.Product", b =>
                {
                    b.HasOne("Nikoo.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
